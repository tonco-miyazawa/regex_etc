==============================================================

     (?~abc)  に想定外であろうゼロ幅マッチを入れてみた

                       tonco-miyazawa        2021/12/22 公開
==============================================================


言葉の上では 「 \b を含まない文字列 」 を意味する  (?~\b) を
 "1" と ":" の間に置いて  1(?~\b):  という正規表現を作る

この正規表現はテキスト "1:" にマッチする？ しない？

..という訳で実験だ！



※  これは想定外の使い方なのでもしマッチしてしまったとしても
※  問題ないことをお忘れなく




■ oniguruma 6.9.7    /sample/simple.c の 17,18行目を書き換えた

検索表現： 1(?~\\b):
対象テキスト： 1:

結果=>  1:  にマッチした




■ Onigmo 6.2.0     分岐が無いので本来は論文準拠の動作をするはず

string = "1:"
puts string.sub( /1(?~\b):/, '<match>')

結果=>  マッチせず




■ Perl5  5.32.1       先読みを使った疑似非包含

$str = "1:";
$str =~ s/1(?:(?!\b).)*\:/<match>/;

結果=>  1:  にマッチ




####  結論  ####


perl5版は書き方による仕様であることは明らか

oniguruma は  (?~abc)  がマッチする部分の右端の位置では
弾くべきゼロ幅マッチがあっても弾けずマッチしてしまうようだ

これをバグと言うのは違和感があるが、もしゼロ幅マッチに成り得る
正規表現を中に入れるなら注意が必要だ

Onigmo の非包含オペレータはゼロ幅マッチ対応！ 拍手〜！



おわり






