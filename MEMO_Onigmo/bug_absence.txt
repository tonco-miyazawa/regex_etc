==============================================================

        Onigmo の非包含オペレータのバグを再現する方法

            　　　　tonco-miyazawa     2022/01/01 - 2022/03/02
==============================================================


■ バグが発生する条件は２つ

非包含オペレータの中に入れる正規表現が以下の条件を満たせば良い


１、同じ位置で文字数の異なる複数のマッチングが可能


２、同じ位置で最初にマッチする文字列の文字数が
    他にマッチする文字列の文字数よりも多い




■ 簡単な例

p /^(?~a{1,2})/.match("aa")
#<MatchData "a">


正規表現 "a{1,2}" は上記の２つの条件を満たしている
最初に先頭の位置から "aa" (文字数2)がマッチするが
同じ位置で "a" (文字数1)もマッチ可能だ


同じ位置で最短の文字数になるマッチを見つけなければ
マッチに含んではいけない文字列を含んでしまう可能性がある
しかし Onigmo はそのための検索をしていないのがバグの原因だ



■ Onigmo の非包含オペレータは実用出来る

リテラル文字列を非包含オペレータに入れても上記の条件には
当てはまらないのでバグの影響を  まったく  受けない

つまり、バグ発生条件に当てはまらないものを非包含オペレータに
入れて使うぶんにはまったく問題なく使えてしまう

例、 <head>(?~</head>)</head>

非常に便利なので十分に理解した上で実用してもらいたい



おわり




