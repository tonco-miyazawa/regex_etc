==============================================================

        Onigmo の非包含オペレータのバグを再現する方法

                       tonco-miyazawa       2022/01/01 公開
==============================================================


バグが発生する条件は２つ
非包含オペレータの中に入れる正規表現が以下の条件を満たせば良い


１、同じ位置で文字数の異なる複数のマッチングが可能


２、同じ位置で最初にマッチする文字列の文字数が
    他にマッチする文字列の文字数よりも多い




< 簡単な例 >

p /^(?~a{1,2})/.match("aa")
#<MatchData "a">


正規表現 "a{1,2}" は上記の２つの条件を満たしている
最初に先頭の位置から "aa" (文字数2)がマッチするが
同じ位置で "a" (文字数1)もマッチ可能だ


同じ位置で最短の文字数になるマッチを見つけなければ
マッチに含んではいけない文字列を含んでしまう可能性がある
しかし Onigmo はそのための検索をしていないのがバグの原因だ



<バグの修正>

このバグを修正するには最初に見つけたマッチよりも短い
文字数でマッチすることが可能かどうかを調べるようにすれば良い

もし最初のマッチより短い文字数でマッチ出来たのであれば
更に短い文字数でマッチ出来るかを試さなくてはならない

１文字ずつ短くして試すのは非効率なので

 "半分の長さに切って試す"

など別のアルゴリズムを考える必要があると思う




おわり




