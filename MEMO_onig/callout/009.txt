======================================================
      callout.c の結果と考察  no.009      2022/04/12
======================================================

## line: 245
  test(enc, mp, "abc(?:(*ERROR)|$)", "abcabc");



この１行による出力が以下のもの


--------------------------
SEARCH ERROR: -3: abort
--------------------------


1. この正規表現の縮図

 "abcabc" =~ /abc(?:(*ERROR)|$)/



2.  "-3"

  マッチを強制的に中断させた上にエラーコード "-3" を返している。
 通常時のマッチに失敗したときのコード "-1" とは異なっている。



3. "(*ERROR)"

  (*ERROR) は oniguruma にあらかじめ組み込まれている関数。
なので (*foo) とは違い、callout.c では定義されていない。

組み込み関数は大文字で定義されているので自分で定義する関数には
小文字を使ったほうが良い。


組み込み関数の説明は以下のdocを参照。

CALLOUTS.BUILTIN.ja
https://github.com/kkos/oniguruma/blob/master/doc/CALLOUTS.BUILTIN.ja

------- 引用 -----------

* ERROR    (前進)

  (*ERROR{n::LONG})

  検索/照合を中止する
  戻り値は引数'n'の値。(-1より小さい負の値でなければならない)
  'n'はオプション引数で、デフォルト値はONIG_ABORT

------------------------


 (*FAIL) は現在の検索開始位置からの照合を行き止まりにしてバックトラックを
発生させるだけだが、 (*ERROR) は照合も検索も完全に止め、エラーを吐かせる。

(*ERROR) はプログラミングの例外処理のように使える。
見つかってはいけないものが見つかったら検索を強制終了させられる。




4. 自分で書いたテスト

 数字の "5" か "7" が見つかれば検索を強制終了するコード

------------------------------------------------------
test(enc, mp, "<data>(?:[57](*ERROR)|\\d)</data>", "<data>4</data>");
------------------------------------------------------

結果: "<data>4</data>" の場合
-------------
match at 0
0: (0-14)
-------------

結果: "<data>7</data>"  の場合
------------------------------
SEARCH ERROR: -3: abort
------------------------------

結果: "<data>A</data>"  の場合
------------------------------
search fail
------------------------------



5.  (*ERROR) は引数を付けてエラーコードの数字を指定出来る

## 検索を中断したら "-10000" を吐くコード
------------------------------------------------------
  test(enc, mp, "<data>(?:[57](*ERROR{-10000})|\\d)</data>", "<data>5</data>");
------------------------------------------------------

結果:
------------------------------
SEARCH ERROR: -10000: undefined error code
------------------------------

=> デフォルトのエラーコード "-3: abort" から変わっている。



6.  perl5の特殊なバックトラック制御記号 (*VERB:ARG) との関係

perldoc: 特殊なバックトラック制御記号
https://perldoc.jp/docs/perl/5.26.1/perlre.pod#Special32Backtracking32Control32Verbs

oniguruma の "(*ERROR)" は perl5 で "(*COMMIT)(*FAIL)" と書くのと同じ動作になる。
perldoc の (*COMMIT) のサンプルコードを oniguruma で再現してみた。

## perldoc のサンプル
-----------------------
'aaabaaab' =~ /a+b?(*COMMIT)(?{print "$&\n"; $count++})(*FAIL)/;
-----------------------

## oniguruma で同じ動作になるコード
-----------------------
test(enc, mp, "a+b?(*foo)(*ERROR)", "aaabaaab");
-----------------------

このコードでは "print" の代わりに (*foo) を使った。


### 結果 ###
-----------------------
name: foo
NAME PROGRESS: contents: "(null)", start: "aaabaaab", current: "aaab"
user_data: something data
stack: used_num: 4, used_bytes: 128
SEARCH ERROR: -3: abort
-----------------------

=> (*ERROR) によって検索が中断され、 (*foo) による出力が１回のみで終わっている。

"start" と "current" を見ると perldoc と同じ結果になっていることが分かる。

※ current で表示されるのは現在位置から見た検索対象文字列の残り。
  current: "aaab"  は先頭を "0" とする位置で言うと "4" の位置にいることを示している。



 おわり



